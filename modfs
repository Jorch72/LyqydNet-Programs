for k, v in pairs(fs) do
	oldfs[k] = v
end

newfs = {}

newfs.copy = function(source, dest)
	if string.find(source, "^/?remote/") or string.find(dest, "^/?remote/") then
		--operate on remote files before calling oldfs equivalent
	end
	return oldfs.copy(source, dest)
end

newfs.move = function(source, dest)
	if string.find(source, "^/?remote/") or string.find(dest, "^/?remote/") then
		--operate on remote files before calling oldfs equivalent
	end
	return oldfs.move(source, dest)
end

newfs.list = function(path)
	if string.find(path, "^/?remote/") then
		local serverConn = connection.open(string.match(path, "^/?remote/(&w+)/?"), filed, 2)
		if not serverConn then return {} end
		local lsString = "ls"
		local remotePath = string.match(path, "^/?remote/%w+/(.*)")
		if remotePath then lsString = lsString.." "..remotePath end
		connection.send(serverConn, "fileList", lsString)
		local messType, message = connection.awaitResponse(serverConn)
		message = string.sub(message, 3) 
		local result = {}
		for s in string.gmatch(message, "(.-);") do
			table.insert(result, s)
		end
		return result
	end
	return oldfs.list(path)
end
